


1.) EC2 Instance Running Out of Disk Space:
-------------------------------------------
    Check /root - os:
           - Investigate and clear space in /root.
    Check the logs:
           - Examine and free up space in /var/log and /tmp.
    Check /application - for our application:
           - Inquire about the application's purpose and log location.
           - Explore clearing space in the application directory.
           - If necessary, take an EBS Snapshot and increase the associated volume size.


2.) Prometheus obtains metrics in two ways:
-------------------------------------------
    Pull Approach: Exposes metric endpoints (e.g., Java App/Node.js) for Prometheus to scrape data.

    Push Approach: The App sends metrics via a gateway back to Prometheus for storage.

    Q: Why choose PUSH?
    A: For apps that may not run continuously, PUSH ensures timely metric updates.

Prometheus is a toolkit for monitoring and alerting, ensuring system and application reliability. 
It collects metrics to inform decision-making, supporting dashboards and alerting. It monitors Docker 
containers, capturing CPU usage, memory, network traffic, and more, with built-in support for exporters 
like Node Exporter and Docker.


3.)What is Kubernetes kOpt (Kubernetes Operations)?
---------------------------------------------------
Kubernetes kOps is not limited to testing; it is a versatile tool used for production deployment and 
management of Kubernetes clusters.


4.) What is an instance fleet in AWS?
-------------------------------------
An AWS instance fleet is a diverse set of EC2 instances designed for specific use cases:
    * pricing models
    * Amazon EMR (Cloud-based big data platform) 
    * Application that require tailoring.


5.) Are you supporting any applications? If yes what application sever?
-----------------------------------------------------------------------
No, I haven't worked with application servers for:

Java: (Tomcat, JBoss, Weblogic)
NodeJS: (IIS)
Python: (Django)


6.) How to check logs on a Docker container - the last 200 lines?
-----------------------------------------------------------------
To check logs and filter only the last 200 lines, use the following command:
# docker container logs <container_name> --tail 200

This command will display the last 200 lines of the container logs.


7.)  What will happen to container logs if you restart the container? Will it be lost?
--------------------------------------------------------------------------------------
Restarting a container won't result in log loss; data is only lost upon container deletion 
due to their statelessness.

Consider using external persistent storage like SPLUNK for app logs. SPLUNK is effective for 
log aggregation, analysis, and visualization, supporting Docker container log storage.


8.) What is vertical scaling and horizontal scaling? Explain w/ a use case…
---------------------------------------------------------------------------
Vertical scaling: 
    - increases CPU/RAM capacity, exemplified by moving an EC2 instance from 
      Large to 2x.Large for enhanced features. 

Horizontal scaling:
    - manages incoming traffic, demonstrated by an Auto Scaling Group (ASG) handling 
      increased load while maintaining the same app features.


9.) Explain REPLICATION CONTROLLER in Kubernetes:
-------------------------------------------------
The Replication Controller in Kubernetes ensures the specified number of pods (replicas) 
from the YAML file are consistently present across the cluster.


10.) Do you use helm?
     versin currently using, and do you see benefits to using this particular 
     version?
-------------------------------------------------------------------------------
Yes, I’ve used v2 and v3.

Currently using v3.
Benefits include simplifying package management of Kubernetes apps in a cluster, enabling 
sharing apps as reusable chart versions. This facilitates easier deployment, upgrades, and rollbacks.

Additional Notes:
Helm uses YAML files for chart definitions and configurations.
Kubernetes uses YAML or JSON files for resource definitions (e.g., Pods, Services, Deployments).


11.) 
	a.) What is a Python Module?
		* Reusable files w/ Python code and data inside.
	
	b.) Explain what `if _ _name_ _ == “_ _main_ _”:  means?
        * That is a common construct that controls the execution of code. 
        * If I’m being run directly then execute said code. If I’m being imported - don’t execute me. 
        * The __name__ variable is a built-in Python variable that is automatically set by the Python interpreter.

	c.) Can you tell me what Boto3 is?
        * Boto3 is an (SDK) provided by Amazon for interacting with AWS services and resources.

	d.)Which python module would you use to make a simple API testing call.
	       Note: The code should just checkin an API endpoint is working or not.
        * I would use the requests module with “get” function check the status_code of the URL endpoint.


I.e,
import requests

url = 'https://example.com/api/endpoint'  # Replace with your API endpoint URL

response = requests.get(url)

if response.status_code == 200:
    data = response.json()  # Assuming the response is in JSON format
    print(data)
else:
    print(f'Error: {response.status_code}')

	E.) How would you setup a virtual environment in Python
		sh 'python3 -m venv myenv'
                sh 'source myenv/bin/activate'
                sh 'pip install -r requirements.txt'
                sh 'python3 my_test_script.py'
                sh ‘deactivate’


12.) What is remote-exec in Terraform and when will you use it?
        * It just executes a script on the remote resources after it’s created.
        * Let’s say we use TF code to spin up an EC2, then we can use remote-exec to execute a script. 

13.) Can we have Jenkins agent which is a docker container and run our test inside this docker container?
        * Yes, Standard way companies implement pipelines.
        * Usually the Jenkins servers are in an HA cluster (Master - Slave relationship)

14.) What are some way in which you have setup alerting?
We used Prometheus and through Alertmanager phone call and Email alerts would be triggered.  

        * Prometheus —> Will trigger alert through “Alertmanager”. 
        * Cloudwatch - SNS
        * Nagios - Alerting
        * Alert Notifications through: Email, mobile phone call, Slack Message.

15.) What are HELM Charts?
        * It’s a packaged application - pre-configured template w/ values. 

NOTE: Known Chart Repos
https://artifacthub.io/

Bitnami Charts (Bitnami):
* URL: https://bitnami.com/stacks/helm
* Description: Bitnami offers a collection of Helm charts for popular open-source software. These charts are often used in production environments and are known for their 

Helm Hub (Official):
* URL: https://hub.helm.sh/
* Description: The official Helm chart repository that provides a curated collection of charts maintained by the Helm project.

Extra:

HELM PRE-REQS
Add s3 Plugin to Helm
# helm plugin install https://github.com/hypnoglow/helm-s3.git

Add s3 to Helm Repo
# helm s3 init s3://<your-bucket-name>/<path-to-charts>
Note:
- S3 is Cloud Based Object Storage
- It uses HTTP for transport
- Offers a Restful API to interface with objects in the bucket. 

Note:
helm s3 init:
* helm s3 init is a command provided by the Helm S3 plugin.
* It is used to initialize an S3 bucket as a Helm chart repository. This means that you can use an S3 bucket to store and serve Helm charts.
* You specify the S3 bucket's path as the repository URL when using this command.
* Example:
# helm s3 init s3://my-helm-bucket/charts

helm repo add:
* helm repo add is used to add a remote Helm chart repository to your Helm client.
* It's typically used for public or private Helm chart repositories hosted on HTTP/HTTPS 
# helm repo add stable https://charts.helm.sh/stable

# helm repo update

PACKAGE HELM CHART
# helm package - -version <name>.v1.0.0 .     (Archiving Helm chart in current directory)

COPY CHART to S3 Bucket assuming AWS CLI is installed. 
# aws s3 cp /path/to/your/helm/chart.tar.gz s3://your-s3-bucket-name/path/to/destination/

DEPLOY CHART straight from Bucket
# helm install my-release s3://<your-bucket-name>/<path-to-charts>/<chart-name>


17.) Have you use Jenkins in multi node setup? If yes, explain how to add a new slave/follower to the master?
Directive: Practice setting up through Terraform.
* Yes I worked in a Jenkins Multi-node Setup. High Availability. 
* Log into Jenkins - Manage Jenkins - Manage Nodes and Clouds - Give Slave Info: (Node IP, PW, Username…”
Gets Register W/ Mater Node

a.) Can we add slaves dynamically?
* Sure, Add an Auto Scaling Group 

18.) Explain how you would block an IAM user from accessing a specific s3 bucket?
* Go into s3… Under Permissions / Bucket Policy…
* Mention the IAM User ARN and DENY Permission

19.) You encounter a docker image with size 2.7GB… Cause for Concern? 
* Depends on what the Application is being used for
* The Bigger it is - results in LONGER BUILD TIME, Download Errors.

A.) If yes, how would you tackle this?
* Use smaller Image (Alpine Image)      /// Light and doesn’t have unnecessary packages installed.
* Remove packages binaries and  remove packages that are NOT required. 

NOTE:
When IAM users or groups are created - they are assigned a unique identifier called  an ARN (Amazon Resource Name),

20.)  What does this IAM POLICY mean? Can you read it.

{ 
“version “ “ “ 2012-10-17”, 
“Statement”: [
     {
        “Sid”: “AllowS3ListRead”,  <——  Organized Unique identifier.  
        “Effect: “Allow:,		<——  Allow the following actions
        “Action”: [
              “s3:GetBucketLocation”,
              “s3:GetAccountPublicAccessBlock”,   <—— These are the actions we’re allowing.
              “s3:ListAccessPoints”











